name: Build KernelSU Next Kernel for Lancelot

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4

    - name: Set up Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex libssl-dev \
          libelf-dev build-essential git wget curl \
          python3 python3-pip ca-certificates unzip

    - name: Clone ZyCromerZ Clang (Latest)
      run: |
        git clone --depth=1 https://github.com/ZyCromerZ/Clang.git clang
        echo "CLANG_PATH=$(pwd)/clang/bin" >> $GITHUB_ENV

    - name: Add KernelSU Next
      run: |
        git clone --depth=1 https://github.com/KernelSU-Next/KernelSU-Next.git KernelSU
        bash KernelSU/kernel/setup.sh

    - name: Setup Build Variables
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_USER=adrenaline
        export KBUILD_BUILD_HOST=github-actions
        export PATH=$CLANG_PATH:$PATH
        echo "Patching KernelSU Next"

    - name: Start Kernel Compilation
      run: |
        make O=out lancelot_defconfig
        # Enable KSU config forcibly
        echo "CONFIG_KSU=y" >> out/.config
        make -j$(nproc) O=out \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi-

    - name: Clone AnyKernel3
      run: |
        git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git AnyKernel3
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/

    - name: Create Flashable ZIP
      run: |
        cd AnyKernel3
        zip -r9 ../Lancelot-Kernel-KSU-Next.zip *

    - name: Upload Final Flashable ZIP
      uses: actions/upload-artifact@v4
      with:
        name: Lancelot-Kernel-KSU-Next
        path: Lancelot-Kernel-KSU-Next.zip
